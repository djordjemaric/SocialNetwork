image: maven:3.9.6-amazoncorretto-17

definitions:
  services:
    docker:
      memory: 2048
  script: &createOIDC
    export AWS_REGION=eu-central-1
            && export AWS_ROLE_ARN=arn:aws:iam::211125711045:role/bitbucket_oidc_role 
            && export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token 
            && echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
  steps:
    - step: &build
        name: Build the application
        caches:
          - maven
        script:
          - mvn -B clean package -DskipTests --file pom.xml
        artifacts:
          - target/*.jar
    - step: &testOIDC
        image: amazon/aws-cli
        name: Creating AWS OpenID connection
        oidc: true
        script:
          - *createOIDC
          - aws sts get-caller-identity
    - step: &test
        name: Run Tests and Generate Coverage Report
        caches:
          - maven
        script:
          - export DOCKER_BUILDKIT=0
          - export TESTCONTAINERS_RYUK_DISABLED=true
          - export TESTCONTAINERS_CHECKS_DISABLE=true
          - mvn -B clean verify --file pom.xml
        artifacts:
          - target/site/jacoco/*
        services:
          - docker
    - step: &pushToECR
        trigger: manual
        name: Build image and push to ECR
        oidc: true
        script:
          - docker build --build-arg="JAR_FILE=target/*.jar" -t social-network:latest -t social-network:$BITBUCKET_COMMIT .
          - pipe: atlassian/aws-ecr-push-image:2.4.0
            variables:
              AWS_DEFAULT_REGION: eu-central-1
              AWS_OIDC_ROLE_ARN: 'arn:aws:iam::211125711045:role/bitbucket_oidc_role'
              IMAGE_NAME: social-network
              TAGS: 'latest ${BITBUCKET_COMMIT}'
    - step: &gettingTaskDefinition
        image: amazon/aws-cli
        name: Getting task definition file from AWS
        oidc: true
        script:
          - *createOIDC
          - aws ecs describe-task-definition --task-definition social-network-task > taskDefinition.json
        artifacts:
          - taskDefinition.json

    - step: &cleaningJSON
        image: stedolan/jq
        name: Cleaning inital json file
        script:
          - jq 'del(.taskDefinitionArn, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy, .revision, .status)' taskDefinition.json > taskDefinitionCleaned.json
        artifacts:
          - taskDefinitionCleaned.json
    - step: &deployToECS
        image: amazon/aws-cli
        name: Deploy image to ECS
        oidc: true
        script:
          - *createOIDC
          - cat taskDefinitionCleaned.json
          - aws ecs register-task-definition --cli-input-json file://taskDefinitionCleaned.json
          - pipe: atlassian/aws-ecs-deploy:1.12.1
            variables:
              AWS_DEFAULT_REGION: 'eu-central-1'
              AWS_OIDC_ROLE_ARN: 'arn:aws:iam::211125711045:role/bitbucket_oidc_role'
              CLUSTER_NAME: 'SocialNetworkCluster'
              SERVICE_NAME: 'SocialNetworkService'
              TASK_DEFINITION: 'taskDefinitionCleaned.json'
pipelines:
  branches:
    master:
      - step: *build
      - step: *test
      - step: *testOIDC
      - step: *pushToECR
      - step: *deployToECS
    automating-task-definition:
      - step: *build
      - step: *gettingTaskDefinition
      - step: *cleaningJSON
      - step: *deployToECS